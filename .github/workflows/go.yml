# name: Go

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:

#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2

#     - name: Set up Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: 1.15
           
#     - name: Fetch Source
#       run: go get -insecure -u "github.com/golang/protobuf/proto" "github.com/v2ray/v2ray-core/app/router" "github.com/v2ray/v2ray-core/infra/conf"
      
#     - name: Build
#       run: go build -v ./..
      
#     - name: GenerateRun
#       run: ./V2SiteIP

name: Build V2Ray rules dat files
on:
#   workflow_dispatch:
#   schedule:
#     - cron: "0 20 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.x.y
        uses: actions/setup-go@v2
        with:
          go-version: "^1.17"

      - name: Set variables
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash

      - name: Checkout https://github.com/SwordJason/V2SiteIP
        uses: actions/checkout@v2.3.4
        with:
          repository: SwordJason/V2SiteIP
          path: v2siteip

      - name: Build GeoSiteIP Program file
        run: |
          cd v2siteip || exit 1
          go build main.go

      - name: Generate Data Run
        run: ./main
          
#       - name: Move and zip files and generate sha256 hash
#         run: |
#           install -Dp ./geoip.dat ./publish/geoip.dat
#           install -Dp ./geoip.dat.sha256sum ./publish/geoip.dat.sha256sum
#           install -Dp ./custom/publish/dlc.dat ./publish/geosite.dat
#           install -p {proxy,direct,reject}-tld-list.txt ./publish/
#           install -p {proxy,direct,reject}-list.txt ./publish/
#           install -p {apple-cn,google-cn,gfw,greatfire}.txt ./publish/
#           cd ./publish || exit 1
#           zip rules.zip {proxy,direct,reject}-list.txt geoip.dat geosite.dat
#           sha256sum geosite.dat > geosite.dat.sha256sum
#           sha256sum rules.zip > rules.zip.sha256sum
#       - name: Release and upload assets
#         uses: softprops/action-gh-release@v1
#         with:
#           name: ${{ env.RELEASE_NAME }}
#           tag_name: ${{ env.TAG_NAME }}
#           draft: false
#           prerelease: false
#           files: |
#             ./publish/*
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#       - name: Git push assets to "release" branch
#         run: |
#           cd publish
#           git init
#           git config --local user.name "actions"
#           git config --local user.email "action@github.com"
#           git checkout -b release
#           git add .
#           git commit -m "${{ env.RELEASE_NAME }}"
#           git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
#           git push -f -u origin release
